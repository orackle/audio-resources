---
interface Props {
  instrument: string;
  frequencies: Array<{
    range: [number, number];
    label: string;
    description: string;
    color: string;
  }>;
}

const { instrument, frequencies } = Astro.props;
const minFreq = 20;
const maxFreq = 20000;

// Convert frequency to x-position on a logarithmic scale
const getXPosition = (freq: number) => {
  return (Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq)) * 100;
};

const getNoteFromFreq = (freq: number) => {
  const notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
  const noteNum = 12 * (Math.log2(freq / 440)) + 69;
  const noteIndex = Math.round(noteNum) % 12;
  const octave = Math.floor(noteNum / 12) - 1;
  return `${notes[noteIndex]}${octave}`;
};
---

<div class="eq-visualization">
  <h3>{instrument} Frequency Ranges</h3>
  
  <div class="eq-container">
    <div class="eq-grid">
      {Array.from({ length: 11 }).map((_, i) => {
        const freq = minFreq * Math.pow(10, i / 3.3);
        const xPos = getXPosition(freq);
        return (
          <div 
            class="grid-line" 
            style={`left: ${xPos}%`}
            data-freq={`${Math.round(freq)}Hz`}
          >
            <span class="freq-label">{freq < 1000 ? Math.round(freq) : `${Math.round(freq/1000)}k`}Hz</span>
            <span class="note-label">{freq >= 27.5 && freq <= 4186 ? getNoteFromFreq(freq) : ''}</span>
          </div>
        );
      })}
    </div>

    <div class="eq-bands">
      {frequencies.map((band) => {
        const left = getXPosition(band.range[0]);
        const right = getXPosition(band.range[1]);
        return (
          <div 
            class="eq-band"
            style={`left: ${left}%; width: ${right - left}%; background: ${band.color}40; border-color: ${band.color}`}
            data-range=""
          >
            <div class="band-label" style={`background: ${band.color}`}>
              {band.label}
              <div class="tooltip">
                <strong>{band.label}</strong>
                <p>{band.description}</p>
                <small>{band.range[0]}Hz - {band.range[1]}Hz</small>
              </div>
            </div>
          </div>
        );
      })}
    </div>
  </div>
  
  <div class="eq-legend">
    {frequencies.map((band) => (
      <div class="legend-item">
        <span class="color-box" style={`background: ${band.color}`}></span>
        <span>{band.label}</span>
      </div>
    ))}
  </div>
</div>

<style>
  .eq-visualization {
    margin: 2.5rem 0;
    padding: 0 1.5rem;
    font-family: var(--font-sans);
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .eq-container {
    position: relative;
    height: 220px;
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 1.5rem;
    margin: 2.5rem 0;
    overflow: visible;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    transition: box-shadow 0.2s ease, transform 0.2s ease;
  }
  
  .eq-container:hover {
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    transform: translateY(-1px);
  }
  
  .eq-grid {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  
  .grid-line {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 1px;
    background: var(--border);
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    padding-bottom: 4px;
  }
  
  .freq-label {
    font-size: 0.7rem;
    color: var(--text-muted);
  }
  
  .note-label {
    font-size: 0.6rem;
    color: var(--text-muted);
    opacity: 0.7;
  }
  
  .eq-bands {
    position: relative;
    height: 100%;
  }
  
  .eq-band {
    position: absolute;
    top: 30%;
    height: 40%;
    border: 1px solid;
    border-radius: 4px;
    transition: all 0.2s ease;
  }
  
  .band-label {
    position: absolute;
    top: -24px;
    left: 50%;
    transform: translateX(-50%);
    padding: 2px 8px;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 500;
    color: white;
    white-space: nowrap;
    cursor: help;
  }
  
  .tooltip {
    visibility: hidden;
    min-width: 200px;
    max-width: 280px;
    background-color: var(--surface);
    color: var(--text);
    text-align: left;
    border-radius: 6px;
    padding: 12px;
    position: absolute;
    z-index: 1000;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-10px);
    opacity: 0;
    transition: all 0.2s ease;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    border: 1px solid var(--border);
    font-size: 0.9rem;
    line-height: 1.5;
    margin-bottom: 5px;
    word-wrap: break-word;
    white-space: normal;
    box-sizing: border-box;
  }
  
  .band-label:hover .tooltip {
    visibility: visible;
    opacity: 1;
    transform: translateX(-50%) translateY(0);
    width: auto;
    min-width: 200px;
  }
  
  .tooltip p {
    margin: 0 0 8px 0;
  }
  
  .tooltip small {
    display: block;
    opacity: 0.8;
    margin-top: 4px;
  }
  
  .band-label:hover .tooltip {
    visibility: visible;
    opacity: 1;
  }
  
  .tooltip strong {
    display: block;
    margin-bottom: 4px;
    color: var(--accent);
  }
  
  .tooltip small {
    display: block;
    margin-top: 4px;
    opacity: 0.8;
  }
  
  .eq-legend {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    margin-top: 1rem;
    justify-content: center;
  }
  
  .legend-item {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 0.85rem;
  }
  
  .color-box {
    width: 16px;
    height: 16px;
    border-radius: 3px;
    display: inline-block;
  }
  
  @media (max-width: 768px) {
    .eq-container {
      height: 150px;
    }
    
    .band-label {
      font-size: 0.7rem;
      top: -20px;
    }
    
    .tooltip {
      width: 160px;
      font-size: 0.8rem;
    }
  }
</style>
