---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allCards = await getCollection('cards');
  return allCards.map(card => ({
    params: { slug: card.slug },
    props: { card },
  }));
}

// Get the card from props passed by getStaticPaths
const { card } = Astro.props;

// Log the card structure for debugging
console.log('Card object:', JSON.stringify(card, null, 2));

// Access the card data directly from the card object
const d = card.data;

// Load all cards for related items
const allCards = await getCollection('cards');

// Find related cards by slug for "See also"
const related = d.related ? allCards.filter((e) => d.related.includes(e.slug)) : [];

// Log the related items for debugging
console.log('Related items:', related.map(r => r.slug).join(', '));
---

<BaseLayout title={`${d.title} â€” The Cue Sheet`} description={d.summary}>
  <article class="quickref">
    <header>
      <h1>{d.title}</h1>
      <p class="lede">{d.summary}</p>
    </header>

    {/* tags */}
    {d.tags && d.tags.length > 0 && (
      <div class="chips" style="margin-bottom: var(--space-2);">
        {d.tags.map((t) => (
          <span class="chip">{t}</span>
        ))}
      </div>
    )}

    {/* main content */}
    <div class="content" set:html={card.body} />

    {/* related cards */}
    {related.length > 0 && (
      <div class="related">
        <h2>See also</h2>
        <ul>
          {related.map((item) => (
            <li>
              <a href={`/card/${item.slug}`}>{item.data.title}</a>
            </li>
          ))}
        </ul>
      </div>
    )}
  </article>
</BaseLayout>

